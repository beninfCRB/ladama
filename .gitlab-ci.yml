stages:
- lint
- test
- build
- docker
- deploy

default:
  image: node:20-alpine
  cache:
    key:
      files:
      - package-lock.json
    paths:
    - node_modules/

variables:
  CI_NODE_ENV: production
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

lint_job:
  stage: lint
  script:
  - npm ci
  - npm run lint

test_job:
  stage: test
  script:
  - npm ci
  - npm run test:ci
  artifacts:
    expire_in: 7 days
    when: always
    paths:
    - coverage/

build_job:
  stage: build
  script:
  - npm ci
  - npm run build
  artifacts:
    expire_in: 7 days
    paths:
    - dist/
  only:
  - main
  - tags

docker_build_push_job:
  stage: docker
  image: docker:24
  services:
  - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  - docker build -t $IMAGE_TAG .
  - docker push $IMAGE_TAG
  only:
  - main
  - tags

# deploy_job:
#   stage: deploy
#   image:
#     name: bitnami/kubectl:latest
#     entrypoint: [ "" ]
#   before_script:
#   - echo "$KUBECONFIG_DATA" | base64 -d > /tmp/kubeconfig
#   - export KUBECONFIG=/tmp/kubeconfig
#   script:
#   - mkdir -p ~/.kube
#   - echo "$KUBECONFIG_DATA" | base64 -d > ~/.kube/config
#   - kubectl set image deployment/react-app react-app=$IMAGE_TAG

update-k8s-manifest:
  stage: deploy
  image: alpine:latest
  before_script:
  - apk add --no-cache git bash
  - git config --global user.email "ci-bot@gitlab.com"
  - git config --global user.name "GitLab CI Bot"
  script:
  - echo "Cloning kubernetes repo..."
  - git clone https://oauth2:${K8S_GIT_TOKEN}@gitlab.com/beninfCRB/kubernetes.git
  - cd kubernetes
  - echo "Updating deployment.yaml with new image tag..."
  - >
    sed -i "s|image:.*|image: ${CI_REGISTRY_IMAGE}/react-app:${CI_COMMIT_SHORT_SHA}|g" deployment.yaml
  - git add deployment.yaml
  - git commit -m "Update react-app image to $IMAGE_NAME"
  - git push origin main
  only:
  - main
